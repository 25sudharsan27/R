d <- df %>%
group_by(Date) %>%
summarise(total_value = sum(Value, na.rm = TRUE))
d
df$Value <- as.numeric(df$Value)
# Filter and summarise
d <- df %>%
group_by(Date) %>%
summarise(total_value = sum(Value))
d
# Convert Value column to numeric
df$Value <- as.numeric(df$Value)
# Filter and summarise
d <- df %>%
group_by(Date) %>%
summarise(total_value = sum(Value, na.rm = TRUE))
d
df
df <- data.frame(Date = as.Date(corona_data$reported_date, format = "%m/%d/%Y"), Value = corona_data$Deaths_in_a_day)
# Convert Date column to year-month format
df$Date <- as.yearmon(df$Date)
names(df)
df
data
df <- data.frame(Date = as.Date(data$Invoice.Date, format = "%m/%d/%Y"), Value = data$Total.Sales)
df
df$Date <- as.yearmon(df$Date)
df
d <- df %>%
group_by(Date) %>%
summarise(total_value = sum(Value, na.rm = TRUE))
d
d <- df %>%
group_by(Date) %>%
summarise(total_value = sum(Value, na.rm = TRUE))
d <- df %>%
mutate(Date = as.yearmon(Date),
Value = as.numeric(Value)) %>%
group_by(Date) %>%
summarise(total_value = sum(Value, na.rm = TRUE))
d <- df %>%
mutate(Date = as.yearmon(Date),
Value = as.numeric(Value)) %>%
filter(!is.na(Value)) %>%
group_by(Date) %>%
summarise(total_value = sum(Value, na.rm = TRUE))
d
df <- data.frame(Date = as.Date(data$Invoice.Date, format = "%m/%d/%Y"), Value = data$Total.Sales)
df$Date <- as.yearmon(df$Date)
df$Value <- as.numeric(df$Value)
data = read.csv("data.csv")
View(data)
df <- data.frame(Date = as.Date(data$Invoice.Date, format = "%m/%d/%Y"), Value = data$Total.Sales)
df$Date <- as.yearmon(df$Date)
d <- df %>%
group_by(Date) %>%
summarise(total_value = sum(Value, na.rm = TRUE))
d
ggplot(d, aes(x = Date, y = Value)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(x = "Month and Year", y = "Value", title = "Bar Plot with Month and Year on X-axis") +
theme_minimal()
ggplot(d, aes(x = Date, y = total_value)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
labs(x = "Date", y = "Total Value") +
theme_minimal()
library(scales)
ggplot(d, aes(x = Date, y = total_value)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
labs(x = "Date", y = "Total Value") +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-6)) +  # Adjust scale as needed
theme_minimal()
ggplot(d, aes(x = Date, y = total_value)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
labs(x = "Date", y = "Total Value") +
scale_y_continuous(labels = scales::dollar_format(scale = 1e)) +  # Adjust scale as needed
ggplot(d, aes(x = Date, y = total_value)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
labs(x = "Date", y = "Total Value") +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-1)) +  # Adjust scale as needed
theme_minimal()
ggplot(d, aes(x = Date, y = total_value)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
labs(x = "Date", y = "Total Value") +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-0)) +  # Adjust scale as needed
theme_minimal()
ggplot(d, aes(x = Date, y = total_value, group = 1)) +
geom_line(color = "skyblue") +
geom_point(color = "black") + # Add points for better visualization
labs(x = "Date", y = "Total Value") +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-0)) +  # Adjust scale as needed
theme_minimal()
ggplot(d, aes(x = Date, y = total_value, group = 1)) +
geom_line(color = "skyblue") +
geom_point(color = "black") + # Add points for better visualization
labs(x = "Date", y = "Total Value") +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-0)) +  # Adjust scale as needed
theme_dark()+
theme(panel.background = element_rect(fill = "darkgrey"))
ggplot(d, aes(x = Date, y = total_value, group = 1)) +
geom_line(color = "skyblue") +
geom_point(color = "black") + # Add points for better visualization
labs(x = "Date", y = "Total Value") +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-0)) +  # Adjust scale as needed
theme_dark()+
theme(panel.background = element_rect(fill = "black"))
ggplot(d, aes(x = Date, y = total_value, group = 1)) +
geom_line(color = "white") +
geom_point(color = "green") + # Add points for better visualization
labs(x = "Date", y = "Total Value") +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-0)) +  # Adjust scale as needed
theme_dark()+
theme(panel.background = element_rect(fill = "black"))
ggplot(d, aes(x = Date, y = total_value, group = 1)) +
geom_line(color = "white") +
geom_point(color = "skyblue") + # Add points for better visualization
labs(x = "Date", y = "Total Value") +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-0)) +  # Adjust scale as needed
theme_dark()+
theme(panel.background = element_rect(fill = "black"))
# Assuming 'd' contains the summarized data
ggplot(d, aes(x = Date, y = total_value, group = 1)) +
geom_line(color = "skyblue") +
geom_point(color = "black") + # Add points for better visualization
labs(x = "Date", y = "Total Value") +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-6)) +  # Adjust scale as needed
theme_dark() + # Set the theme to dark
theme(panel.background = element_rect(fill = "darkgrey"),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_blank())
# Assuming 'd' contains the summarized data
ggplot(d, aes(x = Date, y = total_value, group = 1)) +
geom_line(color = "white") +
geom_point(color = "skyblue") + # Add points for better visualization
labs(x = "Date", y = "Total Value") +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-6)) +  # Adjust scale as needed
theme_dark() + # Set the theme to dark
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_blank())
# Assuming 'd' contains the summarized data
ggplot(d, aes(x = Date, y = total_value, group = 1)) +
geom_line(color = "white") +
geom_point(color = "skyblue") + # Add points for better visualization
labs(x = "Date", y = "Total Value") +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-0)) +  # Adjust scale as needed
theme_dark() + # Set the theme to dark
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_blank())
data
ggplot(d, aes(x = Date, y = total_value, group = 1)) +
geom_line(color = "white") +
geom_point(color = "skyblue") + # Add points for better visualization
labs(x = "Date", y = "Total Value") +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-0)) +  # Adjust scale as needed
theme_dark() + # Set the theme to dark
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_blank())
df1 = data.frame(Date = as.Date(data$Invoice.Date, format = "%m/%d/%Y"),Retailers = data$Retailer,Total_Sales= data$Total.Sales)
df1
ggplot(df_agg, aes(x = "", y = Total_Earnings, fill = Retailers)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "right") +
labs(title = "Retailers' Earnings Distribution",
fill = "Retailers",
y = "Total Earnings")
df_agg <- df1 %>%
group_by(Retailers) %>%
summarise(Total_Earnings = sum(Total_Sales)) %>%
arrange(desc(Total_Earnings))
ggplot(df_agg, aes(x = "", y = Total_Earnings, fill = Retailers)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "right") +
labs(title = "Retailers' Earnings Distribution",
fill = "Retailers",
y = "Total Earnings")
ggplot(df_agg, aes(x = "", y = Total_Earnings, fill = Retailers)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "right",
panel.background=element_rect(fill="black")) +
labs(title = "Retailers' Earnings Distribution",
fill = "Retailers",
y = "Total Earnings")
ggplot(df_agg, aes(x = "", y = Total_Earnings, fill = Retailers)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_dark() +
theme(legend.position = "right") +
labs(title = "Retailers' Earnings Distribution",
fill = "Retailers",
y = "Total Earnings")
ggplot(df_agg, aes(x = "", y = Total_Earnings, fill = Retailers)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_grey() +
theme(legend.position = "right") +
labs(title = "Retailers' Earnings Distribution",
fill = "Retailers",
y = "Total Earnings")
ggplot(df_agg, aes(x = "", y = Total_Earnings, fill = Retailers)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "right") +
labs(title = "Retailers' Earnings Distribution",
fill = "Retailers",
y = "Total Earnings")
ggplot(df_agg, aes(x = "", y = Total_Earnings, fill = Retailers)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "right") +
labs(title = "Retailers' Distribution",
fill = "Retailers",
y = "Total Earnings")
ggplot(d, aes(x = Date, y = total_value, group = 1)) +
geom_line(color = "white") +
geom_point(color = "skyblue") + # Add points for better visualization
labs(x = "Date", y = "Total Value") +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-0)) +  # Adjust scale as needed
theme_dark() + # Set the theme to dark
theme(panel.background = element_rect(fill = "grey"),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_blank())
ggplot(d, aes(x = Date, y = total_value, group = 1)) +
geom_line(color = "white") +
geom_point(color = "skyblue") + # Add points for better visualization
labs(x = "Date", y = "Total Value") +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-0)) +  # Adjust scale as needed
theme_dark() + # Set the theme to dark
theme(panel.background = element_rect(fill = "grey"),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_blank())
# Assuming 'd' contains the summarized data
ggplot(d, aes(x = Date, y = total_value, group = 1)) +
geom_line(color = "black") +
geom_point(color = "red") + # Add points for better visualization
labs(x = "Date", y = "Total Value") +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-0)) +  # Adjust scale as needed
theme_dark() + # Set the theme to dark
theme(panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_blank())
# Assuming 'd' contains the summarized data
ggplot(d, aes(x = Date, y = total_value, group = 1)) +
geom_line(color = "black") +
geom_point(color = "orange") + # Add points for better visualization
labs(x = "Date", y = "Total Value") +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-0)) +  # Adjust scale as needed
theme_dark() + # Set the theme to dark
theme(panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_blank())
ggplot(df_agg, aes(x = "", y = Total_Earnings, fill = Retailers)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "right") +
labs(title = "Retailers' Distribution",
fill = "Retailers",
y = "Total Earnings")
df2 = data.frame(Date = as.Date(data$Invoice.Date, format = "%m/%d/%Y"),Region = data$Region,Total_Sales= data$Total.Sales)
df2
df_agg <- df2 %>%
group_by(Region) %>%
summarise(Total_Earnings = sum(Total_Sales)) %>%
arrange(desc(Total_Earnings))
# Analyze the Retailers Earnings with Total Earnings using Pie Chart
ggplot(df_agg, aes(x = "", y = Total_Earnings, fill = Region)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "right") +
labs(title = "Region's Distribution",
fill = "Region",
y = "Total Earnings")
ggplot(df_agg, aes(x = "", y = Total_Earnings, fill = Region)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "right") +
labs(title = "Region's Distribution",
fill = "Region",
y = "Total Earnings")
ggplot(df_agg, aes(x = "", y = Total_Earnings, fill = Region)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "right") +
labs(title = "Region's Distribution",
fill = "Region",
y = "Total Earnings")
ggplot(df_agg, aes(x = "", y = Total_Earnings, fill = Region)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "right") +
labs(title = "Region wise Distribution",
fill = "Region",
y = "Total Earnings")
ggplot(df_agg, aes(x = "", y = Total_Earnings, fill = Retailers)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "right") +
labs(title = "Retailer wise Distribution",
fill = "Retailers",
y = "Total Earnings")
ggplot(df_agg, aes(x = "", y = Total_Earnings, fill = Retailer)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "right") +
labs(title = "Retailer wise Distribution",
fill = "Retailers",
y = "Total Earnings")
df1 = data.frame(Date = as.Date(data$Invoice.Date, format = "%m/%d/%Y"),Retailers = data$Retailer,Total_Sales= data$Total.Sales)
df1
df_agg <- df1 %>%
group_by(Retailers) %>%
summarise(Total_Earnings = sum(Total_Sales)) %>%
arrange(desc(Total_Earnings))
# Analyze the Retailers Earnings with Total Earnings using Pie Chart
ggplot(df_agg, aes(x = "", y = Total_Earnings, fill = Retailers)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "right") +
labs(title = "Retailer wise Distribution",
fill = "Retailers",
y = "Total Earnings")
df2 = data.frame(Date = as.Date(data$Invoice.Date, format = "%m/%d/%Y"),Region = data$Region,Total_Sales= data$Total.Sales)
df2
df_agg <- df2 %>%
group_by(Region) %>%
summarise(Total_Earnings = sum(Total_Sales)) %>%
arrange(desc(Total_Earnings))
# Analyze the Retailers Earnings with Total Earnings using Pie Chart
ggplot(df_agg, aes(x = "", y = Total_Earnings, fill = Region)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "right") +
labs(title = "Region's Distribution",
fill = "Region",
y = "Total Earnings")
df3 = data.frame(Date = as.Date(data$Invoice.Date, format = "%m/%d/%Y"),Sales_method = data$Sales.Method,Total_Sales= data$Total.Sales)
df3
df_agg1 <- df3 %>%
group_by(Sales_method) %>%
summarise(Total_Earnings = sum(Total_Sales)) %>%
arrange(desc(Total_Earnings))
# Analyze the Retailers Earnings with Total Earnings using Pie Chart
ggplot(df_agg1, aes(x = "", y = Total_Earnings, fill = Sales_method)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "right") +
labs(title = "Sales method Distribution",
fill = "Sales_Method",
y = "Total Earnings")
df3 = data.frame(Date = as.Date(data$Invoice.Date, format = "%m/%d/%Y"),Sales_method = data$Sales.Method,Total_Sales= data$Total.Sales)
df3
df_agg1 <- df3 %>%
group_by(Sales_method) %>%
summarise(Total_Earnings = sum(Total_Sales)) %>%
arrange(desc(Total_Earnings))
# Analyze the Retailers Earnings with Total Earnings using Pie Chart
ggplot(df_agg1, aes(x = "", y = Total_Earnings, fill = Sales_method)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "right") +
labs(title = "Sales method Distribution",
fill = "Sales_Method",
y = "Total Earnings")
df3 = data.frame(Date = as.Date(data$Invoice.Date, format = "%m/%d/%Y"),Sales_method = data$Sales.Method,Total_Sales= data$Total.Sales)
df3
df_agg1 <- df3 %>%
group_by(Sales_method) %>%
summarise(Total_Earnings = sum(Total_Sales)) %>%
arrange(desc(Total_Earnings))
# Analyze the Retailers Earnings with Total Earnings using Pie Chart
ggplot(df_agg1, aes(x = "", y = Total_Earnings, fill = Sales_method)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "right") +
labs(title = "Sales method Distribution",
fill = "Sales_Method",
y = "Total Earnings")
library("data")
df3 = data.frame(Date = as.Date(data$Invoice.Date, format = "%m/%d/%Y"),Sales_method = data$Sales.Method,Total_Sales= data$Total.Sales)
df3
df_agg1 <- df3 %>%
group_by(Sales_method) %>%
summarise(Total_Earnings = sum(Total_Sales)) %>%
arrange(desc(Total_Earnings))
# Analyze the Retailers Earnings with Total Earnings using Pie Chart
ggplot(df_agg1, aes(x = "", y = Total_Earnings, fill = Sales_method)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "right") +
labs(title = "Sales method Distribution",
fill = "Sales_Method",
y = "Total Earnings")
df2 = data.frame(Date = as.Date(data$Invoice.Date, format = "%m/%d/%Y"),Region = data$Region,Total_Sales= data$Total.Sales)
df2
df_agg2 <- df2 %>%
group_by(Region) %>%
summarise(Total_Earnings = sum(Total_Sales)) %>%
arrange(desc(Total_Earnings))
# Analyze the Retailers Earnings with Total Earnings using Pie Chart
ggplot(df_agg2, aes(x = "", y = Total_Earnings, fill = Region)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "right") +
labs(title = "Region's Distribution",
fill = "Region",
y = "Total Earnings")
df1 = data.frame(Date = as.Date(data$Invoice.Date, format = "%m/%d/%Y"),Retailers = data$Retailer,Total_Sales= data$Total.Sales)
df1
df_agg <- df1 %>%
group_by(Retailers) %>%
summarise(Total_Earnings = sum(Total_Sales)) %>%
arrange(desc(Total_Earnings))
# Analyze the Retailers Earnings with Total Earnings using Pie Chart
ggplot(df_agg, aes(x = "", y = Total_Earnings, fill = Retailers)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "right") +
labs(title = "Retailer wise Distribution",
fill = "Retailers",
y = "Total Earnings")
df <- data.frame(Date = as.Date(data$Invoice.Date, format = "%m/%d/%Y"), Value = data$Total.Sales)
# Convert Date column to year-month format
#df$Date <- as.yearmon(df$Date)
df$Value <- as.numeric(df$Value)
# Filter and summarise
d <- df %>%
group_by(Date) %>%
summarise(total_value = sum(Value, na.rm = TRUE))
# Assuming 'd' contains the summarized data
ggplot(d, aes(x = Date, y = total_value, group = 1)) +
geom_line(color = "black") +
geom_point(color = "orange") + # Add points for better visualization
labs(x = "Date", y = "Total Value") +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-0)) +  # Adjust scale as needed
theme_dark() + # Set the theme to dark
theme(panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_blank())
df <- data.frame(Date = as.Date(data$Invoice.Date, format = "%m/%d/%Y"), Value = data$Total.Sales)
# Convert Date column to year-month format
df$Date <- as.yearmon(df$Date)
df$Value <- as.numeric(df$Value)
# Filter and summarise
d <- df %>%
group_by(Date) %>%
summarise(total_value = sum(Value, na.rm = TRUE))
# Assuming 'd' contains the summarized data
ggplot(d, aes(x = Date, y = total_value, group = 1)) +
geom_line(color = "black") +
geom_point(color = "orange") + # Add points for better visualization
labs(x = "Date", y = "Total Value") +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-0)) +  # Adjust scale as needed
theme_dark() + # Set the theme to dark
theme(panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_blank())
df <- data.frame(Date = as.Date(data$Invoice.Date, format = "%m/%d/%Y"), Value = data$Total.Sales)
# Convert Date column to year-month format
library(zoo)
df$Date <- as.yearmon(df$Date)
df$Value <- as.numeric(df$Value)
# Filter and summarise
d <- df %>%
group_by(Date) %>%
summarise(total_value = sum(Value, na.rm = TRUE))
# Assuming 'd' contains the summarized data
ggplot(d, aes(x = Date, y = total_value, group = 1)) +
geom_line(color = "black") +
geom_point(color = "orange") + # Add points for better visualization
labs(x = "Date", y = "Total Value") +
scale_y_continuous(labels = scales::dollar_format(scale = 1e-0)) +  # Adjust scale as needed
theme_dark() + # Set the theme to dark
theme(panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.border = element_blank())
df2.head(10)
