q()
setwd("~/")
setwd("D:/College/sem4/R")
# In R programming index will start at 1
a <- c(0,3,2)
# In R programming index will start at 1
a <- c(0,3,2)
b <- c(2,5,1)
print(a&b)
print(a[2] && b[2])
print(b %in% a)
# Micelleneous Operator
a <- 23.31
print(a)
a <- c(25,27,26)
b <- 27
print(b %in% a)
M = Matrix(c(1,2,3,4) , 2, 2 , TRUE)
M = matrix(c(1,2,3,4) , 2, 2 , TRUE)
# Micelleneous Operator
a <- 23.31
print(a)
a <- c(25,27,26)
b <- 27
print(b %in% a)
M = matrix(c(1,2,3,4) , 2, 2 , TRUE)
print(M %*% t(M))
# Micelleneous Operator
a <- 23.31
print(a)
a <- c(25,27,26)
b <- 27
print(b %in% a)
M = matrix(c(1,2,3,4) , 2, 2 , TRUE)
print(M %*% t(M))
print(M )
# Micelleneous Operator
a <- 23.31
print(a)
a <- c(25,27,26)
b <- 27
print(b %in% a)
M = matrix(c(1,2,3,4) , 2, 2 , FALSE)
print(M )
M = matrix(c(1,2,3,4) , 2, 2 , TRUE)
# Micelleneous Operator
a <- 23.31
print(a)
a <- c(25,27,26)
b <- 27
print(b %in% a)
M = matrix(c(1,2,3,4) , 2, 2 , TRUE)
print(M )
?Matrix
?matrix
# Micelleneous Operator
a <- 23.31
print(a)
a <- c(25,27,26)
b <- 27
# %in% denotes thatt b element is present in a or not
print(b %in% a)
#matrix(data = NA, nrow = 1, ncol = 1, byrow = FALSE, dimnames = NULL)
M = matrix(c(1,2,3,4) , 1, 4 , TRUE)
print(M )
M = matrix(c(1,2,3,4) , 4, 1 , TRUE)
print(M )
source("D:/College/sem4/R/a7_micelleneous_op.r")
source("D:/College/sem4/R/a7_micelleneous_op.r")
source("D:/College/sem4/R/a7_micelleneous_op.r")
source("D:/College/sem4/R/a7_micelleneous_op.r")
source("D:/College/sem4/R/a7_micelleneous_op.r")
source("D:/College/sem4/R/a7_micelleneous_op.r")
source("D:/College/sem4/R/a7_micelleneous_op.r")
source("D:/College/sem4/R/a7_micelleneous_op.r")
source("D:/College/sem4/R/a7_micelleneous_op.r")
source("D:/College/sem4/R/a7_micelleneous_op.r")
x <- (list(c(1,2,3,4),'A',sin,TRUE))
## Data Types
# List , Array , Vector , Matrix , Factor
# Vector
# Vector is a sequence of data elements of the same basic type
# There are 5 atomic vectors, also termed at 5 **classes** of vectors.
# It can be logical , integer(3L,4L) , numeric(3.1 , 2 , 4.12 ) , complex , character
# Matrix
#  A matrix is a two-dimensional rectangular data set.
#I can be created using a vector input to the matrix function.
# if you don't know any keyword in the r language you can just run this command
# ? (keyword)
# List
# a list is an R- object which can contain different types of elements inside it like
# funciton and another list inside it
x <- (list(c(1,2,3,4),'A',sin,TRUE))
print(x[[1]])
## Data Types
# List , Array , Vector , Matrix , Factor
# Vector
# Vector is a sequence of data elements of the same basic type
# There are 5 atomic vectors, also termed at 5 **classes** of vectors.
# It can be logical , integer(3L,4L) , numeric(3.1 , 2 , 4.12 ) , complex , character
# Matrix
#  A matrix is a two-dimensional rectangular data set.
#I can be created using a vector input to the matrix function.
# if you don't know any keyword in the r language you can just run this command
# ? (keyword)
# List
# a list is an R- object which can contain different types of elements inside it like
# funciton and another list inside it
x <- list(c(1,2,3,4),'A',sin,TRUE)
print(x[[1]])
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
print(x[1])
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
# While matrices are confined to two dimensions, arrays can be of any number of
# of dimensions. The array function takes a dim attribute which creates the required number of dimension.
?array
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
source("D:/College/sem4/R/a8_datatypes.r")
